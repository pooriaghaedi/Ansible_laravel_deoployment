---
    - name: Install common software
      apt: 
        name: software-properties-common
        state: present

    - name: Add PHP 8 Repository
      apt_repository:
        repo: ppa:ondrej/php

    - name: Update the repositories
      apt: 
        update_cache: yes

    - name: Install PHP
      apt: 
        name: php{{ php_version }} 
        state: present

    - name: Install LAMP Stack
      apt:
        name:
          - php{{ php_version }}-mysql
          - php{{ php_version }}-curl
          - php{{ php_version }}-xsl
          - php{{ php_version }}-gd
          - php{{ php_version }}-mbstring
          - php{{ php_version }}-zip
          - php{{ php_version }}-xmlrpc
          - php{{ php_version }}-soap
          - php{{ php_version }}-intl
          - php{{ php_version }}-ldap
          - php{{ php_version }}-fpm
          - nginx
          - mysql-server
          - gcc
          - python3-pip
          - python3-certbot-nginx
        state: present
        update_cache: yes

    - name: Install PyMySQL
      pip:
        name: PyMySQL
        state: present
        executable: pip3

    - name: Download and Install Composer
      get_url:
        url: https://getcomposer.org/installer
        dest: /tmp/composer-setup.php
      command: 
        cmd: php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer
      args:
        creates: /usr/local/bin/composer

    - name: Start and enable Nginx
      service:
        name: nginx
        state: started
        enabled: true

    - name: Deploy vhost config file
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/sites-enabled/{{ project_name }}.conf
        owner: root
        group: root
        mode: 0644

    - name: Generate SSH Keypair
      community.crypto.openssh_keypair:
        path: "{{ ansible_role_name }}/files/id_ssh_rsa"

    - name: Display public key
      command: 
        cmd: cat {{ ansible_role_name }}/files/id_ssh_rsa.pub
      register: command_output

    - name: Print public key
      debug:
        var: command_output.stdout

    - name: Confirm GitHub has public key
      pause: 
        prompt: Is the public key added to Github (yes/no)?
      register: key_added

    - name: Clone GitHub repository
      git:
        repo: "{{ github_repo }}"
        dest: /var/www/html/{{ project_name }}
        key_file: "{{ ansible_role_name }}/files/id_ssh_rsa"
        accept_hostkey: yes
      when: key_added.user_input | bool

    - name: Set permissions
      ansible.builtin.file:
        path: /var/www/html/{{ project_name }}
        owner: www-data
        group: www-data
        mode: '0755'

    - name: Install composer dependencies
      composer: 
        command: install
        global_command: false
        working_dir: /var/www/html/{{ project_name }}
      environment:
        COMPOSER_NO_INTERACTION: "1"

    - name: Generate Certbot certificate
      ansible.builtin.command: certbot --nginx --email "{{ email_address }}" -d {{ hostname }} --non-interactive --agree-tos
      tags: test
